 node 
   一个基于 chrome V8 解析引擎的javascript 运行时环境
     比如 ： chrome  浏览器用来运行 html 文件
             word   文本编辑软件 用来运行 doc 或者 docx 文件
            node  js运行软件  用来运行 js 文件



node 检测 
    
    cmd 命令回车 
    输入 node -v  出现版本号表示安装成功



node常见指令
 cd 文件夹名称   表示进入该目录

 cd ..          表示回到上一级

 dir            查看当前目录下所有内容

 盘符：          先切换盘符 再切换文件夹

 cls             清楚窗口所有内容


 ping  地址      测试网络延迟
 

 systeminfo      查看电脑信息



node 运行 js文件 
     直接在 命令行 书写 js 文件
       打开命令行 目录无所谓
       输入指令  node 
       进入js 代码  界面
       保存不下来 一旦关闭 再次打开就没了

    2  代开命令行 切换目录到你需要运行的js文件里
        输入  node 文件名称  
         就回执行 js  文件里的所有代码

node  的开发模式

  
   nodejs的开发模式一定是 模块化开发

     前端共享一个html 文件 a里面添加一个全局 b可以直接使用


    node.js 多个js 文件之间没有任何关系 每一个js文件        只能使用
      自己文件内的所有数据 
      每一个js文件 都是一个独立的模块

node js 模块化开发
     自定义模块  
        我们自己按照需求书写的一个个模块
     内置模块
         天生自带的一些模块

     第三方模块
         别人写好传到网上的一些模块

1

自定义模块  
     就是自己书写的一个 js 文件
 
     在里面封装了一些方法 还需要 让别的文件使用
     作为一个方法提供 模块来的出现

commonJS 的模块化规范
     导出
        就是让一个文件里面的内容可以被别的文件识别
     导入
        就是识别另一个文件里面导出的内容


导出 
    在nodejs 环境下 每一个js文件 天生自带一个属性叫      做module 
     
    我们就把该文件内想要让其他问价使用的数据放           module.exports中

导入
    在nodejs 环境下 每一个js文件 天生自带一个方法叫做
    reruire（）  用来导入 
    如果导入的 是一个js 文件 可以省略后缀不写 
    导入的就是 另一个文件中 module.export


2 
  
内置模块

 node会自带一个模块 叫做fs（file system ）

   fs 模块里 封装了一些关于文件 和文件夹的操作
   当你需要操作文件 或者文件夹的时候 只要导入这个模块
   就能使用里面的方法
 
     fs模块里面的方法
           异步读取文件
            readFile（）
              语法 fs.readfile(路径，格式，回调函数)
                路径：你要读取的文件的路径
                格式： 默认是 buffer  可以选填 utf-8
                回调函数：会在读取结束后执行回调函数
                     回调函数有两个形参 
                          err  表示读取失败时候的错误
                          data  表示成功时候的文件内容
   
    
            同步读取文件
             readFilesync（）
                语法 fs.readFilesync(路径，格式)
                   返回值是读取出来的文件内容


            异步写入文件
              writeFile（）
               fs.writeFile(路径，内容，回调函数)
                   路径：你要把内容写到哪一个文件内
                            如果有这个文件 覆盖式写入
                            没有则 自动创建这个文件


                    内容：你想要写入的内容

                    回调函数 会在写入成功后执行
                         如果成功后不打算做什么事 也必                           不传递回调会报错

             同步写入文件
              writeFileSync（）
                   语法fs.writeFileSync(路径，内容)

  url 内置模块

      专门用来操作 url 地址的模块
     1 解析地址
         parse（）
          url.parse(要解析的地址，是否深度解析)
                       url地址       默认是false
     2 返回值
         一个对象数据类型
         所有和解析地址相关的内容


   
   http  内置模块
      
      一个node 自带的内置模块
       用来创建 http 服务的模块
        就是node.js 用来书写服务器的模块

   
     创建服务 
      createServer（）
        语法http.createServer(函数)
             前端每一次请求都会触发一次函数
        返回值  一个http 服务
          接受两个参数
            req 本次请求的所有请求信息
            res 本次请求的相应信息 

  2 监听指定端口号
      listen（）
    语法 服务.listen(端口号，回调函数)
         你要监听的端口号
          监听成功后的回调函数  可以写可以不写

   作用  
      当你在命令行执行这个文件的时候
      会把当前命令行变成一个服务器
    










                   



         






         
      
       





























     
         
 



































