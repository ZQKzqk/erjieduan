浏览器 地址栏   
 
    window.location 
 
   
    是一个对象数据类型   window的成员
     打印得到的是 地址栏相关的内容

href 
   一个读写的属性 
     语法 ：  window.location.href 
          得到的就是当前的网址

    修改当前地址栏的信息就是跳转页面 
      语法：window.location.href='跳转地址'

reload（）方法
    
      重新加载当前页面

     语法：window。location。reload（）
        这个方法一执行 就回刷新一次页面
！！！！！不要写在一打开就执行的位置

        一般写在 事件里

了解！！！！！1
     获取浏览器信息
  
window.navigator这个是一个对象数据类型
  
 在navigator里记录浏览器的一些信息

window.navigator.useAgent  浏览器的版本及型号信window.navigator.appVersion   浏览器的版本信息
window.navigator.appName    软件名称
window.navigator.platform   浏览器的操作系统

 


操作浏览器的历史记录
  
window.history是一个对象数据类型
 
back（）  历史回退  

forward（）前进

go（）   正数表示前进   负数表示后退   0刷新
        退几步  可以写几


操作浏览器标签页


window.open() 打开一个新的标签页

window.close（） 关闭当前标签页




 
浏览器卷曲的尺寸

document.documentElement.scrollTop    卷曲的高度

当页面不存在document的时候
  document.body.scrolltop


兼容写法 

var  scrollTop=document.documentElenment.scrollTop
                || docunment.body.scrollTop

卷去的宽度

  同上    单词  变成scrollleft




获取元素
   
  html    document.documentElement 
 
  head   document.head 
 
  body   document.body

  标签    document.getElementByTagName("标签名")

  id名     document.getElementById （“id名”） 
         
  class名   document.getElementByClassName（‘class名’）
                
  
  name属性  document.getElementByName（‘name一般input’）
  

  选择器    querySerySelector（“例：nth-child（1）”）

   
  选择器    querySerySelectorAll（‘例 ul>li‘ ）
   
    



 
操作文本内容
          返回值 都是   字符串

  innerHTML    可以识别标签  
       可以获取    也可以 更改

  innerText    
         不能识别标签



value  
   一个可以读取和更改的值

      一般  input  获取的都是  字符串

        也可以更改 



操作元素属性

  原生属性   例    input  的  value  和 name 
   
         input.value=   ' 123'
  
         可以直接操作 

操作自定义属性
 
   获取自定义属性  
getAttribute（’找那个自定义名字就写那个‘）
    添加一个自定义属性和值
setAttribute（’属性名‘，’属性值‘）
    删除自定义的属性
 removeAttribute




操作元素的  H5 自定义属性

dataset 
    里面含有所有data-开头的属性  算是一个对象吧
    
    dataset . b = 200   添加一个data-b = 200的值

    修改   同上   
      delete.标签.dataset.a    删除一个data-a的属性

      delete  删除

 
操作元素样式
 
    元素.style.属性=值

 拿不到那个style的属性   只能拿到行内的style属性 
     - 没有   可以变成驼峰命名法  
      
例：   backgound-color    backgoundColor





操作元素类名  clasName

  className
      一个可以读写的属性  如果一个属性有多个名字时
      就会把classname变成一个类名字符串   
    
   元素。classname = 值   覆盖式的
    元素.classname+=' 空格后的值 '
   
       


classlist

     classlist.add('名字')添加一个class名

   
    classlist.remove（’名字‘）   删除一个


     classlist.toggle（’‘名字）   有就加  没有等于删除





        
         
     
  
     
   