下午 10:18 2021/2/12 星期五ES发展史
     ES是ECMAScript是js的语法
   
   97年第一版es标准诞生  叫做es1   约定了一些基础的语法方式
 
   98年es2诞生 在es1的基础上增加了一些内容

   00年es3诞生 在es2的基础上增加了一些内容
 
   2009年在es3 的基础上增加了一些新的内容
       官方叫做 es5  
       社区叫做 es3.1

    2011年在es5 的基础上增加了一些新的内容
        官方叫做 es5.1
        社区叫做 es5


     2015年官方通过当年的es4 随后加强版本
        官方叫做 ES2015
        社区叫做 es6



数组的常用方法
    数组的常用方法都是统一的  
                  数组.方法（）



       以下是方法

！push（）  向数组里追加一个数据
            返回值是添加数据之后这个数组的长度

！pop（）   每执行一次则会删除最后一个数组的数据  
              返回值是他删除的那个数据

！ unshift（） 从数组的索引（下标）0开始添加一个数据
               返回值和push一样都是数组的新长度

！ shift（）   删除数组的第一个索引 没执行一此则删除一个
                返回值是删除的那个数据

！reverse（）   把数组翻转  翻转数据

！sort（）  将数组按照首字母的大小进行排列
   sort（function（a，b）{ return a-b}）  将数组进行顺序排列  从小到大
   sort（function(a,b)｛return b-a｝） 将数组进行顺序排列 从大到小


！splice （）  可以控制数据从什么地方插入并截取几个
              例splice(2,3,4,5,6)  就是从索引2开始插入
               截取3个数据  并且把4 5 6 这三个数据放进去

！！！！！！！！！！！！！！以上都是操作数组的方法改变数组
         ########下面都是不操作数组的方法******
    
￥ slice（）  复制几个数据  返回值是复制到的几个数组
              语法： slice（2,5）就是说从索引2 到4被复制

￥ concat（）  拼接数组   返回值 是新的数组 不会影响原来的
              语法 concat（【1,2,3】，4）插入在最后 可以是数组

￥ join（）   把一个数组用符号串联起来返回一个字符串
               语法 join（^_^）就表示每个数据之间用这个表型串了起来





               
 % indexof（）  查找数据所在索引位置用的 
                语法： indexof(3,4)就是从第4未开始找3的suoyinweihi 

 % lastindexof () 和indexof差不多 只是lastindexof是从后面开始找
                 语法： lastindexof（2,3）从第三索引位置向前面找

 % foreach（）  数组遍历自己用的 有三个参数 数据 索引 数组
                  语法：foreach（function（a,b,c）{
                         
                        console.log(a)  按照长度来定循环次数
                       console.log(b)   a 是数据 b 是索引 c 数组本身

                      console.log(c)   

                                     }）

% map（）    用来映射一个数组  在影射的过程中可以操作数据
             要用返回值得方式  要加return   
            
             语法：var s=arr.  map（function（a）{
                      return a*10         }）

            console.log(s)

% filter（）  过滤数组用的 把满足条件的不要 返回值的方式一个新数组

              语法：。filter（function（a）{
                 return a<3               就是说大于3的过滤掉
                                    }） 



% ervere（） 判定每一个数据是不是都满足条件 都满足是true 否false 
             
               语法： 。ervere（function（a）{
                     return    a<4   每一个数据是否都比4小

                               }）
              



% some （）  判定数组有没有一个数据满足 有一个满足则会返回true
 
               语法。some（function（a）{
                   return a<4 如果有一个满足就回是true
                          }）

 find（）   返回这个数据


findIndex（）返回满足条件的这个数据所在的索引

（function （）{}  ）

（）里有一个值时 表示数据 
    时有二个值时 表示数据 和 索引
    有三个值时 表示 数据 和 索引  和 数组本身


























